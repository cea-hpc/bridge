#!/bin/ksh
#*****************************************************************************\
#  scripts/addons/dirige.ad - 
#******************************************************************************
#  Copyright  CEA/DAM/DIF (2012)
#
#  This file is part of Bridge, an abstraction layer to ease batch system and
#  resource manager usage in heterogeneous HPC environments.
#
#  Bridge is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  Bridge is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with Bridge.  If not, see <http://www.gnu.org/licenses/>
#*****************************************************************************/


function bridge_addon_msub_setopt {
    return 0
}

function bridge_addon_msub_getopt {
    return 0
}


function bridge_addon_msub_alteropt {

    ## on se place en mode debug si souhaite
    typeset -i BRIDGE_DEBUG_LEVEL=${BRIDGE_DEBUG_LEVEL:-0}+1
    if [ "${BRIDGE_DEBUG_MODE}" = "yes" ] && [[ ${BRIDGE_DEBUG_LEVEL} -le ${BRIDGE_DEBUG_MAXLEVEL} ]]
    then
	    set -x
    fi
    
    ## on incremente le niveau de log
    typeset -i BRIDGE_VERBOSE_LEVEL=${BRIDGE_VERBOSE_LEVEL:-0}+1
    
    ## on ajoute une entete a la log
    typeset LOGGER="${LOGGER} dirige  Wrapper Addon :"
    typeset ERROR="${ERROR} dirige  Wrapper Addon :"
:
    ## le script a modifier doit etre accessible en tant que 1er argument
    if [[ -z ${BRIDGE_MSUB_SCRIPTFILE} ]]
    then
        ${LOGGER} "no script defined in variable 'BRIDGE_MSUB_SCRIPTFILE', skipping"
        return  1
    fi

    BRIDGE_DIRIGE_CMD="${BRIDGE_DIRIGE_CMD:=$(which dirige 2>/dev/null)}"
    if  [ ! -f  "$BRIDGE_DIRIGE_CMD"  ] ;then 
        return 1
    fi
    
    ## on recherche l'utilisation de la commande dirige  dans le jobscript
    egrep -q "(^\ *dirige($|\ ))|(^\ *${BRIDGE_DIRIGE_CMD}($|\ ))" ${BRIDGE_MSUB_SCRIPTFILE}
    if [[ $? -eq 0 ]]
    then
        if [ -z "$CCCSPOOLDIR" ] ; then
            export CCCSPOOLDIR="$CCCSCRATCHDIR/.SPOOL"
        fi
        if [ ! -d "$CCCSPOOLDIR" ] ; then
           mkdir $CCCSPOOLDIR 2>/dev/null
        fi

       # on cree/initialise les repertoires de travail necessaires dans $CCCSPOOLDI a l'aide de la commande dirige
        ${BRIDGE_DIRIGE_CMD} -I

        if [[ -z ${BRIDGE_DIRIGE_SPOOLDIR} ]]
	then
    		BRIDGE_DIRIGE_SPOOLDIR="${CCCSPOOLDIR}/listings/files"
        fi
        if [[ ! -d ${BRIDGE_DIRIGE_SPOOLDIR} ]]
	then
    		${ERROR} "dirige requested but user spool directory '${BRIDGE_DIRIGE_SPOOLDIR}' does not exist. fatal"
    		exit 1
        else
    		export BRIDGE_MSUB_STDOUT="${BRIDGE_DIRIGE_SPOOLDIR}/${BRIDGE_MSUB_REQNAME}.%j.o"
    		export BRIDGE_MSUB_STDERR="${BRIDGE_DIRIGE_SPOOLDIR}/${BRIDGE_MSUB_REQNAME}.%j.e"
               ${LOGGER} "dirige mode activated"
        fi
    fi

    return 0
}

function bridge_addon_msub_alterscript {
    return 0
}

