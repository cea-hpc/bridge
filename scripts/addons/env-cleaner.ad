#*****************************************************************************\
#  scripts/addons/env-cleaner.ad -
#******************************************************************************
#  Copyright  CEA/DAM/DIF (2012)
#
#  This file is part of Bridge, an abstraction layer to ease batch system and
#  resource manager usage in heterogeneous HPC environments.
#
#  Bridge is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  Bridge is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with Bridge.  If not, see <http://www.gnu.org/licenses/>
#*****************************************************************************/

#################################################################################
#
# Addon for cleaning interactive environment in msub jobs
#
#################################################################################


#################################################################################
# MSUB ENV-CLEANER support
#--------------------------------------------------------------------------------
function bridge_addon_msub_setopt {

    typeset MYGETOPTOPTION="Ii"

    echo "${BRIDGE_MSUB_GETOPT_OPTIONS}" | grep -q ${MYGETOPTOPTION}

    if [ $? -ne 0 ]
    then
        BRIDGE_MSUB_GETOPT_OPTIONS="${BRIDGE_MSUB_GETOPT_OPTIONS}${MYGETOPTOPTION}"
    fi

    return 0

}

function bridge_addon_msub_getopt {
    ## on se place en mode debug si souhaite
    typeset -i BRIDGE_DEBUG_LEVEL=${BRIDGE_DEBUG_LEVEL:-0}+1
    if [ "${BRIDGE_DEBUG_MODE}" = "yes" ] && [[ ${BRIDGE_DEBUG_LEVEL} -le ${BRIDGE_DEBUG_MAXLEVEL} ]]
    then
        set -x
    fi

    ## on incremente le niveau de log
    typeset -i BRIDGE_VERBOSE_LEVEL=${BRIDGE_VERBOSE_LEVEL:-0}+1

    ## on ajoute une entete a la log
    typeset LOGGER="${LOGGER} Bridge Environment Cleaner Addon :"

    ## on fixe le message d'aide a afficher si demande
    typeset USAGE="\
\t*) Environment propagation
\t\t -I : Do not propagate variables from the interactive environment
\t\t -i : Propagate variables from the interactive environment
"
    ## on fixe le status de sortie par defaut
    typeset exit_status=0

    ## on parse les arguments
    while getopts ${BRIDGE_MSUB_GETOPT_OPTIONS} option
    do
        case ${option} in

            h)
                echo -e "${USAGE}" >&2
                return 0
                ;;

            I)
                ENV_CLEANER_ARGEXP1="BRIDGE_ENV_CLEANER=${BRIDGE_ENV_CLEANER_PATH}"
                ;;

            i)
                ENV_CLEANER_ARGEXP1="BRIDGE_ENV_CLEANER="
                ;;

            *)
                ;;
        esac
    done

    return 0
}

function bridge_addon_msub_alteropt {

    ## on se place en mode debug si souhaite
    typeset -i BRIDGE_DEBUG_LEVEL=${BRIDGE_DEBUG_LEVEL:-0}+1
    if [ "${BRIDGE_DEBUG_MODE}" = "yes" ] && [[ ${BRIDGE_DEBUG_LEVEL} -le ${BRIDGE_DEBUG_MAXLEVEL} ]]
        then
        set -x
    fi

    ## on incremente le niveau de log
    typeset -i BRIDGE_VERBOSE_LEVEL=${BRIDGE_VERBOSE_LEVEL:-0}+1

    ## on ajoute une entete a la log
    typeset LOGGER="${LOGGER} Bridge Environment Cleaner Addon :"
    typeset ERROR="${ERROR} Bridge Environment Cleaner Addon :"

    ## on parse le script msub
    ENV_CLEANER_AWKSCRIPT='
/^#MSUB/ {
        opt=0
        for(i=2; i<=NF; i++)
                if ($i=="-I") {
                        printf("BRIDGE_ENV_CLEANER=${BRIDGE_ENV_CLEANER_PATH} ")
                        opt=1
                }
                if ($i=="-i") {
                        printf("BRIDGE_ENV_CLEANER= ")
                        opt=1
                }
        if ($opt==1) { printf("; ") }
 }
'
    ENV_CLEANER_ARGEXP2=`${AWK:-awk} "$ENV_CLEANER_AWKSCRIPT" < ${BRIDGE_MSUB_SCRIPTFILE}`

    eval ${ENV_CLEANER_ARGEXP2}
    eval ${ENV_CLEANER_ARGEXP1}

    if [[ -n "$BRIDGE_ENV_CLEANER" ]]; then
      export BRIDGE_ENV_CLEANER
    fi

    return 0
}

function bridge_addon_msub_alterscript {
    return 0
}
#################################################################################


#################################################################################
# MPRUN ENV-CLEANER support
#--------------------------------------------------------------------------------
function bridge_addon_mprun_setopt {
    return 0
}

function bridge_addon_mprun_getopt {
    return 0
}

function bridge_addon_mprun_alteropt {
    return 0
}

function bridge_addon_mprun_spmd_pre_allocate {

    return 0
}

function bridge_addon_mprun_spmd_post_allocate {

    return 0

}

function bridge_addon_mprun_spmd_pre_run {

    return 0
}

function bridge_addon_mprun_spmd_post_run {

    return 0
}
#################################################################################
