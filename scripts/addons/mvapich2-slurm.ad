#################################################################################
#
# Addon for MVAPICH2 support in Bridge with Slurm
#
# 
#################################################################################

function bridge_addon_mprun_setopt {

    return 0

}

function bridge_addon_mprun_getopt {
    
    ## on se place en mode debug si souhaite
    typeset BRIDGE_DEBUG_LEVEL=${BRIDGE_DEBUG_LEVEL:-0}+1
    if [ "${BRIDGE_DEBUG_MODE}" = "yes" ] && [[ ${BRIDGE_DEBUG_LEVEL} -le ${BRIDGE_DEBUG_MAXLEVEL} ]]
	then
	set -x
    fi
    
    ## on incremente le niveau de log
    typeset BRIDGE_VERBOSE_LEVEL=${BRIDGE_VERBOSE_LEVEL:-0}+1
    
    ## on ajoute une entete a la log
    typeset LOGGER="${LOGGER} MVAPICH2 Addon :"

    ## on fixe le status de sortie par defaut
    typeset exit_status=0
    
    ## on parse les arguments
    while getopts ${BRIDGE_MPRUN_GETOPT_OPTIONS} option
      do
      case ${option} in
	  
	  h)
	      return 0
	      ;;

	  *)
	      ;;
      esac
    done

    return 0

}

function bridge_addon_mprun_alteropt {

    ## on se place en mode debug si souhaite
    typeset BRIDGE_DEBUG_LEVEL=${BRIDGE_DEBUG_LEVEL:-0}+1
    if [ "${BRIDGE_DEBUG_MODE}" = "yes" ] && [[ ${BRIDGE_DEBUG_LEVEL} -le ${BRIDGE_DEBUG_MAXLEVEL} ]]
	then
	set -x
    fi
    
    ## on incremente le niveau de log
    typeset BRIDGE_VERBOSE_LEVEL=${BRIDGE_VERBOSE_LEVEL:-0}+1
    
    ## on ajoute une entete a la log
    typeset LOGGER="${LOGGER} MVAPICH2 Addon :"

    echo $(which mpicc 2>/dev/null) | grep -q mvapich2
    if [ $? -ne 0 ]
	then
	return 0
    fi
    ${LOGGER} "MVAPICH2 mpicc is the first in the PATH"

    echo ${spmd_run_options} | grep -q '\-\-mpi=mvapich2'
    if [[ $? -ne 0 ]]
    then
	export spmd_run_cmd="LD_PRELOAD=/usr/lib64/libpmi.so ${spmd_run_cmd}"
	export spmd_run_options="${spmd_run_options} --mpi=mvapich"
	${LOGGER} "MVAPICH2 mode is now enabled"
    else
	${LOGGER} "MVAPICH2 mode is already enabled"
    fi

    return 0

}

function bridge_addon_mprun_spmd_pre_allocate {

    return 0

}

function bridge_addon_mprun_spmd_post_allocate {

    return 0

}

function bridge_addon_mprun_spmd_pre_run {

    return 0

}

function bridge_addon_mprun_spmd_post_run {

    return 0
    
}
