#!/bin/ksh
#*****************************************************************************\
#  scripts/batch_system/mstat.in - 
#******************************************************************************
#  Copyright  CEA/DAM/DIF (2012)
#
#  This file is part of Bridge, an abstraction layer to ease batch system and
#  resource manager usage in heterogeneous HPC environments.
#
#  Bridge is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  Bridge is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with Bridge.  If not, see <http://www.gnu.org/licenses/>
#*****************************************************************************/

#------------------------------------------------------------------------------------------------------------------
# wrapper permettant l'obtention d'informations concernant les sessions batch actives ou non
#------------------------------------------------------------------------------------------------------------------


###################################################################################################################
#
# PROGRAMME PRINCIPAL PROGRAMME PRINCIPAL PROGRAMME PRINCIPAL PROGRAMME PRINCIPAL PROGRAMME PRINCIPAL
#
# PROGRAMME PRINCIPAL PROGRAMME PRINCIPAL PROGRAMME PRINCIPAL PROGRAMME PRINCIPAL PROGRAMME PRINCIPAL
#
###################################################################################################################


###################################################################################################################
# Initialisation des parametres de base
#------------------------------------------------------------------------------------------------------------------
typeset BRIDGE_VERSION="@PACKAGE_NAME@-@PACKAGE_VERSION@"
typeset PROG_VERSION="1.0.0"
#------------------------------------------------------------------------------------------------------------------
# le repertoire de base est fixe lors de l'installation du produit (via ./configure)
# si il n'est pas coherent, c'est a dire qu'il ne correspond pas a un repertoire
# on fixe un repere dans le systeme de fichier en utilisant le chemin d acces a l executable
#------------------------------------------------------------------------------------------------------------------
typeset BASE_DIR=`dirname $0`
typeset PROGNAME=`basename $0`
#------------------------------------------------------------------------------------------------------------------
typeset BRIDGE_BASEDIR=@prefix@
if [[ ! -d ${BRIDGE_BASEDIR} ]]
    then
    BRIDGE_BASEDIR=${BRIDGE_BASEDIR:-${BASE_DIR}/../}
fi
#------------------------------------------------------------------------------------------------------------------
typeset BRIDGE_BINDIR=${BRIDGE_BASEDIR}/bin
typeset BRIDGE_SCRIPTSDIR=${BRIDGE_BASEDIR}/share/scripts
typeset BRIDGE_BATCH_SYSTEM_PLUGINDIR=${BRIDGE_BASEDIR}/share/scripts/batch_system/plugins
#------------------------------------------------------------------------------------------------------------------
typeset BRIDGE_CONFDIR=${BRIDGE_BASEDIR}/etc
if [[ ! -d ${BRIDGE_CONFDIR} ]]
    then
    BRIDGE_CONFDIR=/etc
fi
#------------------------------------------------------------------------------------------------------------------
typeset BRIDGE_HOSTNAME=$(hostname 2>/dev/null)
#------------------------------------------------------------------------------------------------------------------
# on fixe les categories auquelles ce programme appartient (les categories determinent les fichiers de conf
# a sourcer lors de la lecture de la configuration (bridge_readconf)
#------------------------------------------------------------------------------------------------------------------
typeset BRIDGE_CATEGORIES="bridge_bs"
#------------------------------------------------------------------------------------------------------------------
# on fixe les variables liees a la log
#------------------------------------------------------------------------------------------------------------------
typeset BRIDGE_DEBUG_MODE=no
typeset BRIDGE_CHECK_ONLY=no
typeset BRIDGE_VERBOSE_MODE=no
typeset BRIDGE_VERBOSE_LEVEL=1
typeset BRIDGE_VERBOSE_MAXLEVEL=0
typeset BRIDGE_LOGFILE=""
typeset EXIT_STATUS=1
#------------------------------------------------------------------------------------------------------------------
# on fixe l'usage de la commande et le code retour par defaut
#------------------------------------------------------------------------------------------------------------------
typeset USAGE="Usage : ${PROGNAME} [-dvhVO] [-f] [-s] [-q queue] [-u [user]]
        ${PROGNAME} [-dvhV] -r batchid
        ${PROGNAME} [-dvhV] -H batchid
        ${PROGNAME} -b batchid

 ${PROGNAME} is the CCC parallele jobs visualization interface.
 You can increase verbosity to see what is really executed at the batch system level.

 -h            : print this message
 -D            : increase debug level
 -v            : increase verbosity
 -V            : print application version

 -s            : sum up various values and prints results
 -f            : full job name are printed
 -q queue      : only print jobs of a particular queue
 -u [user]     : only print jobs of a particular user or the current one

 -b batchid    : show all the processes related to a job 
 -r batchid    : print a running job given its ID
 -H batchid    : print a finished job given its ID
 -O            : display only jobs exceeding the time limit
"
#------------------------------------------------------------------------------------------------------------------
typeset stat_cmd=bsstat_cmd
typeset stat_args="-c"
typeset info_cmd=bsinfo_cmd
typeset info_args=
typeset cmd_mode=stat
#------------------------------------------------------------------------------------------------------------------
typeset sumflag=no
typeset longflag=
typeset u_flag=no
typeset r_flag=no
typeset H_flag=no
typeset batchid=
typeset queue=
#------------------------------------------------------------------------------------------------------------------
###################################################################################################################
# Analyse des options de la ligne de commande (priorite 1)
# Sauvegarde du nom du script
#------------------------------------------------------------------------------------------------------------------
while getopts dvhVq:sOfur:H:b:p: option
do
  case $option
      in
      d)
	  BRIDGE_DEBUG_MODE=yes;
	  ((BRIDGE_DEBUG_MAXLEVEL = BRIDGE_DEBUG_MAXLEVEL + 1 ))
	  ;;
      v)
	  BRIDGE_VERBOSE_MODE=yes;
	  ((BRIDGE_VERBOSE_MAXLEVEL = BRIDGE_VERBOSE_MAXLEVEL + 1 ))
	  ;;
      h) 
	  echo "$USAGE"  >& 2 ;
	  exit 0
	  ;;
      V) 
	  echo "${PROGNAME}-${PROG_VERSION} (${BRIDGE_VERSION:-?})"
	  exit 0
	  ;;
      q)
	  queue=${OPTARG}
	  stat_args="${stat_args} -q ${OPTARG}"
	  ;;
      s)
	  sumflag=yes
	  ;;
      f)
	  stat_args="${stat_args} -C"
	  longflag=yes
	  ;;
      O)
	  overflag=yes
	  ;;
      u)
	  u_flag=yes
	  ;;
      b)
	  cmd_mode=info
	  b_flag=yes
	  batchid=${OPTARG}
	  ;;
      p)
	  cmd_mode=info
	  p_flag=yes
	  procid=${OPTARG}
	  ;;
      r)
	  cmd_mode=info
	  r_flag=yes
	  batchid=${OPTARG}
	  ;;
      H)
	  cmd_mode=info
	  H_flag=yes
	  batchid=${OPTARG}
	  ;;
      *) echo "$USAGE"  >& 2 ;exit 1 ;;
  esac
done
OPTIND2=`expr $OPTIND - 1`
shift ${OPTIND2}
###################################################################################################################


###################################################################################################################
# On se place en mode debug si necessaire
#------------------------------------------------------------------------------------------------------------------
if [[ "${BRIDGE_DEBUG_MODE}" = "yes" ]]
    then
    set -x
fi
###################################################################################################################


###################################################################################################################
# On source les librairies communes utiles et on fixe les variables de log
#------------------------------------------------------------------------------------------------------------------
. ${BRIDGE_SCRIPTSDIR}/common/bridge_command
. ${BRIDGE_SCRIPTSDIR}/common/bridge_printer
. ${BRIDGE_SCRIPTSDIR}/common/bridge_readconf
typeset LOGGER="bridge_printer ${DEFAULT_PRINTER_OPTIONS} -t verbose"
typeset ERROR="bridge_printer ${DEFAULT_PRINTER_OPTIONS} -ft error"
###################################################################################################################


###################################################################################################################
# On lit la configuration du programme et des categories qu'il utilise
# on commence par charger le plugin par defaut
# puis on charge le plugin detecte et on verifie que la fonction de soumission
# existe
#------------------------------------------------------------------------------------------------------------------
bridge_readconf
for BATCH_SYSTEM in generic ${BATCH_SYSTEM}
  do
  typeset batch_system_plugin_file=${BRIDGE_BATCH_SYSTEM_PLUGINDIR}/${BATCH_SYSTEM}
  if [[ ! -r ${batch_system_plugin_file} ]]
      then
      ${ERROR} "Batch system plugin '${BATCH_SYSTEM}' : ${batch_system_plugin_file} : file not found"
      return 254
  fi
  . ${batch_system_plugin_file}
done
typeset stat_cmd_version
stat_cmd_version=$(${stat_cmd} -V 2>/dev/null)
if [[ $? -ne 0 ]]
    then
    ${ERROR} "Batch system plugin '${BATCH_SYSTEM}' : unable to get version of ${stat_cmd}"
    return 253
else
    ${LOGGER} "Batch system plugin '${BATCH_SYSTEM}' : ${stat_cmd} version ${stat_cmd_version} "
fi
typeset info_cmd_version
info_cmd_version=$(${info_cmd} -V 2>/dev/null)
if [[ $? -ne 0 ]]
    then
    ${ERROR} "Batch system plugin '${BATCH_SYSTEM}' : unable to get version of ${info_cmd}"
    return 253
else
    ${LOGGER} "Batch system plugin '${BATCH_SYSTEM}' : ${info_cmd} version ${info_cmd_version} "
fi

###################################################################################################################


###################################################################################################################
# Execution de la fonction
#------------------------------------------------------------------------------------------------------------------
if [[ ${cmd_mode} = stat ]]
    then
    ## statistique
    if [[ ${sumflag} = yes ]]
	then
	stat_args="${stat_args} -S"
    fi
    if [[ ${overflag} = yes ]]
	then
	stat_args="${stat_args} -O"
    fi
    if  [[ ${u_flag} = yes ]]
	then
	if [[ $# -eq 0 ]]
	    then
	    stat_args="${stat_args} -u $(whoami)"
	else
	    stat_args="${stat_args} -u $1"
	    shift
	fi
    fi
    if [ "$MSTAT_FORMAT" != "new" ] ;then
        if [ "$longflag" != "yes" ] ;then
          stat_args="$stat_args -c"
        else
          stat_args="$stat_args -C"
        fi
    else
        if [ "$longflag" != "yes" ] ;then
          stat_args="$stat_args -d"
        else
          stat_args="$stat_args -D"
        fi
    fi
    if [[ -n ${BRIDGE_MSTAT_EXCLUDED_QUEUES} ]] && [[ -z ${queue} ]]
    then
        eval ${stat_cmd} ${stat_args} $@ | egrep -wv "${BRIDGE_MSTAT_EXCLUDED_QUEUES}"
    else
        eval ${stat_cmd} ${stat_args} $@
    fi
else
    ## informations
    if [[ ${H_flag} = yes ]]
	then
	info_args="${info_args} -H ${batchid}"
        eval ${info_cmd} ${info_args}
    elif [[ ${r_flag} = yes ]]
	then
	info_args="${info_args} ${batchid}"
        eval ${info_cmd} ${info_args}
    elif [[ ${b_flag} = yes ]] 
        then
        if [[ ${p_flag} = yes ]] 
        then
	   info_args="${info_args} -b ${batchid} -p ${procid}"
           eval ${info_cmd} ${info_args}
        else
	   info_args="${info_args} -b ${batchid}"
           eval ${info_cmd} ${info_args}
        fi
    fi
fi

EXIT_STATUS=$?
###################################################################################################################


###################################################################################################################
# Sortie
#------------------------------------------------------------------------------------------------------------------
return ${EXIT_STATUS}
###################################################################################################################
