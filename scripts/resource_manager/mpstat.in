#!/bin/ksh
#*****************************************************************************\
#  scripts/resource_manager/mpstat.in - 
#******************************************************************************
#  Copyright  CEA/DAM/DIF (2012)
#
#  This file is part of Bridge, an abstraction layer to ease batch system and
#  resource manager usage in heterogeneous HPC environments.
#
#  Bridge is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  Bridge is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with Bridge.  If not, see <http://www.gnu.org/licenses/>
#*****************************************************************************/

#------------------------------------------------------------------------------------------------------------------
# wrapper permettant l'obtention d'informations concernant les applications paralleles
#------------------------------------------------------------------------------------------------------------------


###################################################################################################################
#
# PROGRAMME PRINCIPAL PROGRAMME PRINCIPAL PROGRAMME PRINCIPAL PROGRAMME PRINCIPAL PROGRAMME PRINCIPAL
#
# PROGRAMME PRINCIPAL PROGRAMME PRINCIPAL PROGRAMME PRINCIPAL PROGRAMME PRINCIPAL PROGRAMME PRINCIPAL
#
###################################################################################################################


###################################################################################################################
# Initialisation des parametres de base
#------------------------------------------------------------------------------------------------------------------
typeset BRIDGE_VERSION="@PACKAGE_NAME@-@PACKAGE_VERSION@"
typeset PROG_VERSION="1.0.0"
#------------------------------------------------------------------------------------------------------------------
# le repertoire de base est fixe lors de l'installation du produit (via ./configure)
# si il n'est pas coherent, c'est a dire qu'il ne correspond pas a un repertoire
# on fixe un repere dans le systeme de fichier en utilisant le chemin d acces a l executable
#------------------------------------------------------------------------------------------------------------------
typeset BASE_DIR=`dirname $0`
typeset PROGNAME=`basename $0`
#------------------------------------------------------------------------------------------------------------------
typeset BRIDGE_BASEDIR=@prefix@
if [[ ! -d ${BRIDGE_BASEDIR} ]]
    then
    BRIDGE_BASEDIR=${BRIDGE_BASEDIR:-${BASE_DIR}/../}
fi
#------------------------------------------------------------------------------------------------------------------
typeset BRIDGE_BINDIR=${BRIDGE_BASEDIR}/bin
typeset BRIDGE_SCRIPTSDIR=${BRIDGE_BASEDIR}/share/scripts
typeset BRIDGE_RESOURCE_MANAGER_PLUGINDIR=${BRIDGE_BASEDIR}/share/scripts/resource_manager/plugins
typeset BRIDGE_ADDON_DIR=${BRIDGE_BASEDIR}/share/scripts/addons
typeset BRIDGE_ADDON_SCRIPTSDIR=${BRIDGE_BASEDIR}/share/scripts/addons
typeset BRIDGE_PROFILE_DIR=${BRIDGE_BASEDIR}/share/scripts/resource_manager/profiles
#------------------------------------------------------------------------------------------------------------------
typeset BRIDGE_CONFDIR=${BRIDGE_BASEDIR}/etc
if [[ ! -d ${BRIDGE_CONFDIR} ]]
    then
    BRIDGE_CONFDIR=/etc
fi
#------------------------------------------------------------------------------------------------------------------
typeset BRIDGE_HOSTNAME=$(hostname 2>/dev/null)
#------------------------------------------------------------------------------------------------------------------
# on fixe les categories auquelles ce programme appartient (les categories determinent les fichiers de conf
# a sourcer lors de la lecture de la configuration (bridge_readconf)
#------------------------------------------------------------------------------------------------------------------
typeset BRIDGE_CATEGORIES="bridge_rm"
#------------------------------------------------------------------------------------------------------------------
# on fixe les variables liees a la log
#------------------------------------------------------------------------------------------------------------------
typeset -i BRIDGE_DEBUG_MAXLEVEL=${BRIDGE_DEBUG_MAXLEVEL:-0}
typeset BRIDGE_DEBUG_MODE=no
typeset BRIDGE_CHECK_ONLY=no
typeset BRIDGE_VERBOSE_MODE=no
typeset -i BRIDGE_VERBOSE_LEVEL=1
typeset -i BRIDGE_VERBOSE_MAXLEVEL=0
typeset BRIDGE_LOGFILE=""
typeset EXIT_STATUS=1
#------------------------------------------------------------------------------------------------------------------
# on fixe l'usage de la commande et le code retour par defaut
#------------------------------------------------------------------------------------------------------------------

typeset USAGE="Usage : ${PROGNAME} [-dvhV] [ -r resid ] [ -a resid ] [ -m stepid ] [ -t stepid ] [-p partition] [-u [user]]

 ${PROGNAME} is the CCC parallele jobs visualization interface.
 You can increase verbosity to see what is really executed at the batch system level.

 -h            : print this message
 -d            : increase debug level
 -v            : increase verbosity
 -V            : print application version

 -r resid      : display resource allocation characteristics
 -a resid      : display active steps belonging to a resid
 -t stepid     : print execution trace (tree format) for the specified stepid
 -m stepid     : print mpi layout for the specified stepid
 -p partition  : only print jobs of a particular partition
 -u [user]     : only print jobs of a particular user or the current one
"

#------------------------------------------------------------------------------------------------------------------
typeset cmd_mode=stat
#------------------------------------------------------------------------------------------------------------------
typeset u_flag=no
typeset r_flag=no
typeset a_flag=
typeset p_flag=
typeset resid=
typeset partition=
#------------------------------------------------------------------------------------------------------------------
###################################################################################################################
# Analyse des options de la ligne de commande (priorite 1)
# Sauvegarde du nom du script
#------------------------------------------------------------------------------------------------------------------
while getopts dvhVp:ur:t:n:m:a: option
do
  case $option
      in
      d)
	  BRIDGE_DEBUG_MODE=yes;
	  ((BRIDGE_DEBUG_MAXLEVEL = BRIDGE_DEBUG_MAXLEVEL + 1 ))
	  ;;
      v)
	  BRIDGE_VERBOSE_MODE=yes;
	  ((BRIDGE_VERBOSE_MAXLEVEL = BRIDGE_VERBOSE_MAXLEVEL + 1 ))
	  ;;
      h) 
	  echo "$USAGE"  >& 2 ;
	  exit 0
	  ;;
      V) 
	  echo "${PROGNAME}-${PROG_VERSION} (${BRIDGE_VERSION:-?})"
	  exit 0
	  ;;
      p)
      p_flag=yes
	  partition=${OPTARG}
	  ;;
      u)
	  u_flag=yes
	  ;;
      r)
	  r_flag=yes
	  resid=${OPTARG}
	  ;;
      t)  
          t_flag=yes
          resid=${OPTARG}
          ;;
      m)
          m_flag=yes
          resid=${OPTARG}
          ;;
      a)
          a_flag=yes
          resid=${OPTARG}
          ;;
      n)  
          n_flag=yes
          nodeid=${OPTARG}
          ;;
      *) echo "$USAGE"  >& 2 ;exit 1 ;;
  esac
done
OPTIND2=`expr $OPTIND - 1`
shift ${OPTIND2}
###################################################################################################################


###################################################################################################################
# On source les librairies communes utiles et on fixe les variables de log
#------------------------------------------------------------------------------------------------------------------
. ${BRIDGE_SCRIPTSDIR}/common/bridge_command
. ${BRIDGE_SCRIPTSDIR}/common/bridge_printer
. ${BRIDGE_SCRIPTSDIR}/common/bridge_readconf
typeset LOGGER="bridge_printer ${DEFAULT_PRINTER_OPTIONS} -t verbose"
typeset ERROR="bridge_printer ${DEFAULT_PRINTER_OPTIONS} -ft error"
typeset stat_cmd=mpstat_cmd
typeset stat_args=""
typeset info_cmd=${BRIDGE_RMASTAT_CMD}
typeset info_args=""
###################################################################################################################


###################################################################################################################
# On lit la configuration du programme et des categories qu'il utilise
#------------------------------------------------------------------------------------------------------------------
bridge_readconf
###################################################################################################################


###################################################################################################################
# On se place en mode debug si necessaire
#------------------------------------------------------------------------------------------------------------------
if [[ "${BRIDGE_DEBUG_MODE}" = "yes" ]]
    then
    set -x
fi
###################################################################################################################


###################################################################################################################
# On charge le plugin detecte et on verifie que les fonctions d'allocation et d'execution existent
#------------------------------------------------------------------------------------------------------------------
typeset bridge_mpstat_cmd=mpstat_cmd
for resource_manager in generic ${RESOURCE_MANAGER}
  do
  typeset resource_manager_plugin_file=${BRIDGE_RESOURCE_MANAGER_PLUGINDIR}/${resource_manager}
  if [[ ! -r ${resource_manager_plugin_file} ]]
      then
      ${ERROR} "Resource Manager plugin '${resource_manager}' : ${resource_manager_plugin_file} : no such file"
      return 254
  fi
  . ${resource_manager_plugin_file}
done
typeset mpstat_cmd_version
mpstat_cmd_version=$(${bridge_mpstat_cmd} -V 2>/dev/null)
if [[ $? -ne 0 ]]
    then
    ${LOGGER} "Resource Manager plugin '${resource_manager}' : no ${bridge_mpstat_cmd} found in implementation"
    typeset stat_cmd=${BRIDGE_RMASTAT_CMD}
else
    ${LOGGER} "Resource Manager plugin '${resource_manager}' : ${bridge_mpstat_cmd} version ${mpstat_cmd_version} "
    typeset stat_cmd=${bridge_mpstat_cmd}
fi
###################################################################################################################


###################################################################################################################
# Execution de la fonction
#------------------------------------------------------------------------------------------------------------------
if [[ ${cmd_mode} = stat ]]
    then
    dispmode=0
    ## status
    if  [[ ${u_flag} = yes ]]
	then
        stat_cmd=${BRIDGE_RMASTAT_CMD}
        stat_args="${stat_args} -c"
	dispmode=1
	if [[ $# -eq 0 ]]
	    then
	    stat_args="${stat_args} -u $(whoami)"
	else
	    stat_args="${stat_args} -u $1"
	fi
    elif  [[ ${r_flag} = yes ]]
        then
        stat_args="-r ${resid}"
    elif  [[ ${t_flag} = yes ]]
        then
        stat_args="-t ${resid}"
    elif  [[ ${m_flag} = yes ]]
        then
        stat_args="-m ${resid}"
    elif  [[ ${a_flag} = yes ]]
        then
        stat_args="-a ${resid}"
    elif  [[ ${n_flag} = yes ]]
        then
        stat_args="-n ${nodeid}"
    elif  [[ ${p_flag} = yes ]]
        then
	    stat_cmd=${BRIDGE_RMASTAT_CMD}
        stat_args="-c -p ${partition}"
	dispmode=1
    else
	stat_cmd=${BRIDGE_RMASTAT_CMD}
        stat_args="-c"
	dispmode=1
    fi
    if [[ -n "${BRIDGE_MPSTAT_EXCLUDED_PARTITIONS}" ]] && [[ ${dispmode} -eq 1 ]]
    then
        eval ${stat_cmd} ${stat_args} $@ | egrep -wv "${BRIDGE_MPSTAT_EXCLUDED_PARTITIONS}"
    else
        eval ${stat_cmd} ${stat_args} $@
    fi
else
    ## informations
    eval ${info_cmd} ${info_args}
fi
EXIT_STATUS=$?
###################################################################################################################


###################################################################################################################
# Sortie
#------------------------------------------------------------------------------------------------------------------
return ${EXIT_STATUS}
###################################################################################################################
